- name: Get Available Patches Info from Linux Hosts
  hosts: Linux
  become: true
  vars:
    detailedreport: true

  tasks:
    - name: Get list of available patches (security and others)
      shell: dnf check-update
      register: available_patches
      changed_when: false
      failed_when: false   # So play doesnâ€™t fail if no updates available

    - name: Debug raw yum check-update output
      debug:
        var: available_patches.stdout_lines

    - name: Set patch list fact (filtered output)
      set_fact:
        available_patch_info: |
          Available Patches:
          {% if available_patches.stdout_lines %}
          {% for line in available_patches.stdout_lines %}
          {% if line and
                not line.startswith('Loaded plugins:') and
                not line.startswith('Obsoleting Packages') and
                not line.startswith('Security:') and
                not line.startswith('Updated Packages') and
                not line.startswith('Security') and
                not line.startswith('Warning:') and
                not line.startswith('No packages marked for update') %}
          - {{ line }}
          {% endif %}
          {% endfor %}
          {% else %}
          - No patches available.
          {% endif %}

    - name: Save available patch info to file for local inspection
      copy:
        content: "{{ available_patch_info }}"
        dest: "/tmp/available_patches_info.txt"
        mode: '0644'

    - name: Scan Systems for detailed report
      include_role:
        name: shadowman_scan_systems
      when: detailedreport

# Run once to build report on the web server host
- name: Build the report using all hosts' data
  hosts: Linux
  run_once: true
  gather_facts: false
  become: true

  tasks:
    - name: Build the report
      include_role:
        name: build_report_linux
